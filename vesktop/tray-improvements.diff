diff --git a/src/main/appBadge.ts b/src/main/appBadge.ts
index 66ad70bc..d6fb2c41 100644
--- a/src/main/appBadge.ts
+++ b/src/main/appBadge.ts
@@ -6,8 +6,11 @@
 
 import { app, NativeImage, nativeImage } from "electron";
 import { join } from "path";
+import { IpcEvents } from "shared/IpcEvents";
 import { BADGE_DIR } from "shared/paths";
 
+import { mainWin } from "./mainWindow";
+
 const imgCache = new Map<number, NativeImage>();
 function loadBadge(index: number) {
     const cached = imgCache.get(index);
@@ -19,9 +22,11 @@ function loadBadge(index: number) {
     return img;
 }
 
-let lastIndex: null | number = -1;
+let lastBadgeIndex: null | number = -1;
+export var lastBadgeCount: number = -1;
 
 export function setBadgeCount(count: number) {
+    lastBadgeCount = count;
     switch (process.platform) {
         case "linux":
             if (count === -1) count = 0;
@@ -36,15 +41,16 @@ export function setBadgeCount(count: number) {
             break;
         case "win32":
             const [index, description] = getBadgeIndexAndDescription(count);
-            if (lastIndex === index) break;
+            if (lastBadgeIndex === index) break;
 
-            lastIndex = index;
+            lastBadgeIndex = index;
 
             // circular import shenanigans
             const { mainWin } = require("./mainWindow") as typeof import("./mainWindow");
             mainWin.setOverlayIcon(index === null ? null : loadBadge(index), description);
             break;
     }
+    mainWin.webContents.send(IpcEvents.SET_CURRENT_TRAY_ICON);
 }
 
 function getBadgeIndexAndDescription(count: number): [number | null, string] {
diff --git a/src/main/firstLaunch.ts b/src/main/firstLaunch.ts
index 69e01a0d..5d845de5 100644
--- a/src/main/firstLaunch.ts
+++ b/src/main/firstLaunch.ts
@@ -48,6 +48,7 @@ export function createFirstLaunchTour() {
         console.log(data);
         State.store.firstLaunch = false;
         Settings.store.discordBranch = data.discordBranch;
+        Settings.store.tray = true;
         Settings.store.minimizeToTray = !!data.minimizeToTray;
         Settings.store.arRPC = !!data.richPresence;
 
diff --git a/src/main/ipc.ts b/src/main/ipc.ts
index 94eb6715..2c5a8ec6 100644
--- a/src/main/ipc.ts
+++ b/src/main/ipc.ts
@@ -31,6 +31,7 @@ import { autoStart } from "./autoStart";
 import { VENCORD_FILES_DIR, VENCORD_QUICKCSS_FILE, VENCORD_THEMES_DIR } from "./constants";
 import { mainWin } from "./mainWindow";
 import { Settings, State } from "./settings";
+import { setTrayIcon } from "./tray";
 import { handle, handleSync } from "./utils/ipcWrappers";
 import { PopoutWindows } from "./utils/popout";
 import { isDeckGameMode, showGamePage } from "./utils/steamOS";
@@ -182,3 +183,5 @@ watch(
         mainWin?.webContents.postMessage("VencordThemeUpdate", void 0);
     })
 );
+
+handle(IpcEvents.SET_TRAY_ICON, (_, iconURI) => setTrayIcon(iconURI));
diff --git a/src/main/mainWindow.ts b/src/main/mainWindow.ts
old mode 100644
new mode 100755
index 762d39be..fae7ab06
--- a/src/main/mainWindow.ts
+++ b/src/main/mainWindow.ts
@@ -20,11 +20,11 @@ import { EventEmitter } from "events";
 import { rm } from "fs/promises";
 import { join } from "path";
 import { IpcCommands, IpcEvents } from "shared/IpcEvents";
+import { ICON_PATH } from "shared/paths";
 import { isTruthy } from "shared/utils/guards";
 import { once } from "shared/utils/once";
 import type { SettingsStore } from "shared/utils/SettingsStore";
 
-import { ICON_PATH } from "../shared/paths";
 import { createAboutWindow } from "./about";
 import { initArRPC } from "./arrpc";
 import {
@@ -46,7 +46,7 @@ import { applyDeckKeyboardFix, askToApplySteamLayout, isDeckGameMode } from "./u
 import { downloadVencordFiles, ensureVencordFiles } from "./utils/vencordLoader";
 
 let isQuitting = false;
-let tray: Tray;
+export let tray: Tray;
 
 applyDeckKeyboardFix();
 
@@ -565,5 +565,9 @@ export async function createWindows() {
         }
     });
 
+    nativeTheme.on("updated", () => {
+        mainWin.webContents.send(IpcEvents.SET_CURRENT_TRAY_ICON);
+    });
+
     initArRPC();
 }
diff --git a/src/main/tray.ts b/src/main/tray.ts
new file mode 100644
index 00000000..1d32e887
--- /dev/null
+++ b/src/main/tray.ts
@@ -0,0 +1,43 @@
+/*
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ */
+
+import { nativeImage, nativeTheme } from "electron";
+import { join } from "path";
+import { ICONS_DIR } from "shared/paths";
+
+import { lastBadgeCount } from "./appBadge";
+import { tray } from "./mainWindow";
+import { Settings } from "./settings";
+
+export async function setTrayIcon(iconName: string) {
+    if (!tray || tray.isDestroyed()) return;
+    const Icons = new Set(["speaking", "muted", "deafened", "idle", "main"]);
+    if (!Icons.has(iconName)) return;
+
+    if (iconName === "main" && ![-1, 0].includes(lastBadgeCount)) {
+        var trayImage = nativeImage.createFromPath(join(ICONS_DIR, "main_badge.png"));
+        tray.setImage(trayImage);
+        return;
+    }
+
+    if (
+        (Settings.store.trayAutoFill === "auto" && !nativeTheme.shouldUseDarkColors) ||
+        (Settings.store.trayAutoFill === "black" && ["idle", "main"].includes(iconName))
+    ) {
+        iconName += "_black";
+    }
+
+    var trayImage = nativeImage.createFromPath(join(ICONS_DIR, iconName + ".png"));
+    if (trayImage.isEmpty()) {
+        return;
+    }
+    if (process.platform === "darwin") {
+        trayImage = trayImage.resize({ width: 16, height: 16 });
+    }
+    tray.setImage(trayImage);
+
+    return;
+}
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index 1525965f..7125cd0a 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -86,6 +86,12 @@ export const VesktopNative = {
         copyImage: (imageBuffer: Uint8Array, imageSrc: string) =>
             invoke<void>(IpcEvents.CLIPBOARD_COPY_IMAGE, imageBuffer, imageSrc)
     },
+    tray: {
+        setIcon: (iconURI: string) => invoke<void>(IpcEvents.SET_TRAY_ICON, iconURI),
+        setCurrentVoiceIcon: (listener: (...args: any[]) => void) => {
+            ipcRenderer.on(IpcEvents.SET_CURRENT_TRAY_ICON, listener);
+        }
+    },
     debug: {
         launchGpu: () => invoke<void>(IpcEvents.DEBUG_LAUNCH_GPU),
         launchWebrtcInternals: () => invoke<void>(IpcEvents.DEBUG_LAUNCH_WEBRTC_INTERNALS)
diff --git a/src/renderer/components/settings/NotificationBadgeToggle.tsx b/src/renderer/components/settings/NotificationBadgeToggle.tsx
index efc53539..795ec172 100644
--- a/src/renderer/components/settings/NotificationBadgeToggle.tsx
+++ b/src/renderer/components/settings/NotificationBadgeToggle.tsx
@@ -5,6 +5,7 @@
  */
 
 import { setBadge } from "renderer/appBadge";
+import { setCurrentTrayIcon } from "renderer/patches/tray";
 
 import { SettingsComponent } from "./Settings";
 import { VesktopSettingsSwitch } from "./VesktopSettingsSwitch";
@@ -17,6 +18,7 @@ export const NotificationBadgeToggle: SettingsComponent = ({ settings }) => {
                 settings.appBadge = v;
                 if (v) setBadge();
                 else VesktopNative.app.setBadgeCount(0);
+                setCurrentTrayIcon();
             }}
             note="Show mention badge on the app icon"
         >
diff --git a/src/renderer/components/settings/Settings.tsx b/src/renderer/components/settings/Settings.tsx
index 45e0a22e..7b7f0ed3 100644
--- a/src/renderer/components/settings/Settings.tsx
+++ b/src/renderer/components/settings/Settings.tsx
@@ -16,6 +16,7 @@ import { AutoStartToggle } from "./AutoStartToggle";
 import { DeveloperOptionsButton } from "./DeveloperOptions";
 import { DiscordBranchPicker } from "./DiscordBranchPicker";
 import { NotificationBadgeToggle } from "./NotificationBadgeToggle";
+import { TrayFillColorSwitch, TraySwitch } from "./TraySettings";
 import { VesktopSettingsSwitch } from "./VesktopSettingsSwitch";
 import { WindowsTransparencyControls } from "./WindowsTransparencyControls";
 
@@ -84,28 +85,25 @@ const SettingsOptions: Record<string, Array<BooleanSetting | SettingsComponent>>
         },
         WindowsTransparencyControls
     ],
-    Behaviour: [
-        {
-            key: "tray",
-            title: "Tray Icon",
-            description: "Add a tray icon for Vesktop",
-            defaultValue: true,
-            invisible: () => isMac
-        },
+    Tray: [
+        TraySwitch,
+        TrayFillColorSwitch,
         {
             key: "minimizeToTray",
             title: "Minimize to tray",
             description: "Hitting X will make Vesktop minimize to the tray instead of closing",
             defaultValue: true,
-            invisible: () => isMac,
-            disabled: () => Settings.store.tray === false
+            invisible: () => isMac || Settings.store.tray === false
         },
         {
             key: "clickTrayToShowHide",
             title: "Hide/Show on tray click",
             description: "Left clicking tray icon will toggle the vesktop window visibility.",
-            defaultValue: false
-        },
+            defaultValue: false,
+            invisible: () => Settings.store.tray === false
+        }
+    ],
+    Behaviour: [
         {
             key: "disableMinSize",
             title: "Disable minimum window size",
diff --git a/src/renderer/components/settings/TraySettings.tsx b/src/renderer/components/settings/TraySettings.tsx
new file mode 100644
index 00000000..0d269638
--- /dev/null
+++ b/src/renderer/components/settings/TraySettings.tsx
@@ -0,0 +1,68 @@
+/*
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ */
+
+import { Margins } from "@vencord/types/utils";
+import { Forms, Select, Switch } from "@vencord/types/webpack/common";
+import { setCurrentTrayIcon } from "renderer/patches/tray";
+
+import { SettingsComponent } from "./Settings";
+
+const presets = [
+    "#3DB77F", // discord default ~
+    "#F6BFAC", // Vesktop inpired
+    "#FC2F2F", // red
+    "#2FFC33", // green
+    "#FCF818", // yellow
+    "#2FFCE6", // light-blue
+    "#3870FA", // blue
+    "#6F32FD", // purple
+    "#FC18EC" // pink
+];
+
+export const TraySwitch: SettingsComponent = ({ settings }) => {
+    return (
+        <Switch
+            value={settings.tray ?? true}
+            onChange={async v => {
+                settings.tray = v;
+                setCurrentTrayIcon();
+            }}
+            note="Add a system tray entry for Vesktop"
+        >
+            Enable Tray Icon
+        </Switch>
+    );
+};
+
+export const TrayFillColorSwitch: SettingsComponent = ({ settings }) => {
+    if (!settings.tray) return null;
+    return (
+        <div className="vcd-tray-settings">
+            <div className="vcd-tray-settings-labels">
+                <Forms.FormTitle tag="h1" style={{ textTransform: "none", fontWeight: "normal" }}>
+                    Tray Icon Main Color
+                </Forms.FormTitle>
+            </div>
+
+            <Select
+                placeholder="Auto"
+                options={[
+                    { label: "Auto", value: "auto" },
+                    { label: "Black", value: "black" },
+                    { label: "White", value: "white", default: true }
+                ]}
+                closeOnSelect={true}
+                select={v => {
+                    settings.trayAutoFill = v;
+                    setCurrentTrayIcon();
+                }}
+                isSelected={v => v === settings.trayAutoFill}
+                serialize={s => s}
+            ></Select>
+            <Forms.FormDivider className={Margins.top20 + " " + Margins.bottom20} />
+        </div>
+    );
+};
diff --git a/src/renderer/patches/tray.ts b/src/renderer/patches/tray.ts
new file mode 100644
index 00000000..6eeb6272
--- /dev/null
+++ b/src/renderer/patches/tray.ts
@@ -0,0 +1,65 @@
+/*
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ */
+
+import { findByPropsLazy, onceReady } from "@vencord/types/webpack";
+import { FluxDispatcher, UserStore } from "@vencord/types/webpack/common";
+
+const voiceActions = findByPropsLazy("isSelfMute");
+
+var isInCall = false;
+
+export function setCurrentTrayIcon() {
+    if (isInCall) {
+        if (voiceActions.isSelfDeaf()) {
+            VesktopNative.tray.setIcon("deafened");
+        } else if (voiceActions.isSelfMute()) {
+            VesktopNative.tray.setIcon("muted");
+        } else {
+            VesktopNative.tray.setIcon("idle");
+        }
+    } else {
+        VesktopNative.tray.setIcon("main");
+    }
+}
+
+VesktopNative.tray.setCurrentVoiceIcon(() => {
+    setCurrentTrayIcon();
+});
+
+onceReady.then(() => {
+    const userID = UserStore.getCurrentUser().id;
+
+    FluxDispatcher.subscribe("SPEAKING", params => {
+        if (params.userId === userID && params.context === "default") {
+            if (params.speakingFlags) {
+                VesktopNative.tray.setIcon("speaking");
+            } else {
+                setCurrentTrayIcon();
+            }
+        }
+    });
+
+    FluxDispatcher.subscribe("AUDIO_TOGGLE_SELF_DEAF", () => {
+        if (isInCall) setCurrentTrayIcon();
+    });
+
+    FluxDispatcher.subscribe("AUDIO_TOGGLE_SELF_MUTE", () => {
+        if (isInCall) setCurrentTrayIcon();
+    });
+
+    FluxDispatcher.subscribe("RTC_CONNECTION_STATE", params => {
+        if (params.state === "RTC_CONNECTED" && params.context === "default") {
+            isInCall = true;
+        } else if (params.state === "RTC_DISCONNECTED" && params.context === "default") {
+            isInCall = false;
+        }
+        setCurrentTrayIcon();
+    });
+
+    FluxDispatcher.subscribe("MESSAGE_NOTIFICATION_SHOWN", () => {
+        setCurrentTrayIcon();
+    });
+});
diff --git a/src/shared/IpcEvents.ts b/src/shared/IpcEvents.ts
index 10979893..09f84ea8 100644
--- a/src/shared/IpcEvents.ts
+++ b/src/shared/IpcEvents.ts
@@ -53,6 +53,8 @@ export const enum IpcEvents {
 
     CLIPBOARD_COPY_IMAGE = "VCD_CLIPBOARD_COPY_IMAGE",
 
+    SET_TRAY_ICON = "VCD_SET_TRAY_ICON",
+    SET_CURRENT_TRAY_ICON = "VCD_SET_CURRENT_ICON",
     DEBUG_LAUNCH_GPU = "VCD_DEBUG_LAUNCH_GPU",
     DEBUG_LAUNCH_WEBRTC_INTERNALS = "VCD_DEBUG_LAUNCH_WEBRTC",
 
diff --git a/src/shared/paths.ts b/src/shared/paths.ts
index a935d825..f8cb4e0b 100644
--- a/src/shared/paths.ts
+++ b/src/shared/paths.ts
@@ -10,3 +10,4 @@ export const STATIC_DIR = /* @__PURE__ */ join(__dirname, "..", "..", "static");
 export const VIEW_DIR = /* @__PURE__ */ join(STATIC_DIR, "views");
 export const BADGE_DIR = /* @__PURE__ */ join(STATIC_DIR, "badges");
 export const ICON_PATH = /* @__PURE__ */ join(STATIC_DIR, "icon.png");
+export const ICONS_DIR = /* @__PURE__ */ join(STATIC_DIR, "tray");
diff --git a/src/shared/settings.d.ts b/src/shared/settings.d.ts
index 01c26e59..ac192088 100644
--- a/src/shared/settings.d.ts
+++ b/src/shared/settings.d.ts
@@ -10,6 +10,7 @@ export interface Settings {
     discordBranch?: "stable" | "canary" | "ptb";
     transparencyOption?: "none" | "mica" | "tabbed" | "acrylic";
     tray?: boolean;
+    trayAutoFill?: "auto" | "white" | "black";
     minimizeToTray?: boolean;
     openLinksWithElectron?: boolean;
     staticTitle?: boolean;
diff --git a/static/badges/badge.svg b/static/badges/badge.svg
new file mode 100755
index 00000000..96852ee1
--- /dev/null
+++ b/static/badges/badge.svg
@@ -0,0 +1,4 @@
+<?xml version="1.0"?>
+<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000">
+    <circle cx="500" cy="500" r="300" stroke="#f6bfac" stroke-width="50" fill="#f6bfac"/>
+</svg>
diff --git a/static/tray/deafened.png b/static/tray/deafened.png
new file mode 100644
index 00000000..065ecb85
Binary files /dev/null and b/static/tray/deafened.png differ
diff --git a/static/tray/deafened_black.png b/static/tray/deafened_black.png
new file mode 100644
index 00000000..5658ef25
Binary files /dev/null and b/static/tray/deafened_black.png differ
diff --git a/static/tray/idle.png b/static/tray/idle.png
new file mode 100644
index 00000000..8e29c4ec
Binary files /dev/null and b/static/tray/idle.png differ
diff --git a/static/tray/main.png b/static/tray/main.png
new file mode 100644
index 00000000..9d10167f
Binary files /dev/null and b/static/tray/main.png differ
diff --git a/static/tray/main_badge.png b/static/tray/main_badge.png
new file mode 100644
index 00000000..7ce49b80
Binary files /dev/null and b/static/tray/main_badge.png differ
diff --git a/static/tray/muted.png b/static/tray/muted.png
new file mode 100644
index 00000000..4da0148b
Binary files /dev/null and b/static/tray/muted.png differ
diff --git a/static/tray/muted_black.png b/static/tray/muted_black.png
new file mode 100644
index 00000000..a4186dc1
Binary files /dev/null and b/static/tray/muted_black.png differ
diff --git a/static/tray/speaking.png b/static/tray/speaking.png
new file mode 100644
index 00000000..0d1a6b51
Binary files /dev/null and b/static/tray/speaking.png differ
diff --git a/static/tray/speaking_black.png b/static/tray/speaking_black.png
new file mode 100644
index 00000000..4b088f2f
Binary files /dev/null and b/static/tray/speaking_black.png differ
