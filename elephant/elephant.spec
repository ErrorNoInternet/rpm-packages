# Generated by go2rpm 1.17.1
%bcond check 1
%bcond bootstrap 0

%if %{with bootstrap}
%global debug_package %{nil}
%endif

%if %{with bootstrap}
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(.*\\)$
%endif

%global providers archlinuxpkgs bluetooth calc clipboard desktopapplications files menus providerlist runner symbols todo unicode websearch

# https://github.com/abenz1267/elephant
%global goipath         github.com/abenz1267/elephant
Version:                2.7.1

%gometa -L -f

%global common_description %{expand:
Elephant acts as a unified backend service that aggregates data from various
sources (desktop applications, files, clipboard history, etc.) and provides a
consistent interface for frontend applications like custom launchers,
productivity tools, or desktop widgets.}

%global golicenses      LICENSE
%global godocs          README.md cmd/elephant/version.txt

Name:           elephant
Release:        1%{?dist}
Summary:        Unified backend service that aggregates data

License:        GPL-3.0-only
URL:            %{gourl}
Source:         %{gosource}

BuildRequires:  git

%{lua:
for prov in string.gmatch(macros.providers, "%S+") do
  print("Recommends: elephant-"..prov.."\n")
end
}

%description %{common_description}

%gopkg

%{lua:
for prov in string.gmatch(macros.providers, "%S+") do
  print("%package "..prov.."\n")
  print("Summary: "..prov.." provider for elephant\n")
  print("\n%description "..prov.."\n"..prov.." provider for elephant.\n")

  if prov == "bluetooth" then
    print("Recommends: bluez")
  elseif prov == "calc" then
    print("Recommends: qalculate")
    print("Recommends: wl-clipboard")
  elseif prov == "clipboard" then
    print("Recommends: wl-clipboard")
  elseif prov == "files" then
    print("Recommends: fd")
  elseif prov == "symbols" then
    print("Recommends: wl-clipboard")
  elseif prov == "todo" then
    print("Recommends: libnotify")
  elseif prov == "libnotify" then
    print("Recommends: wl-clipboard")
  end

  print("%files "..prov.."\n")
  print("/etc/xdg/elephant/providers/"..prov..".so\n\n")
end
}

%prep
%goprep -A
%autopatch -p1

%if %{without bootstrap}
go mod vendor
%endif

%if %{without bootstrap}
%build
%define gomodulesmode GO111MODULE=on
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done
for prov in internal/providers/*/; do
  pushd $prov
  %gobuild -buildmode=plugin
  popd
done
%endif

%install
%gopkginstall
%if %{without bootstrap}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/
install -Dm755 internal/providers/*/*.so -t %{buildroot}/etc/xdg/elephant/providers/
%endif

%if %{without bootstrap}
%if %{with check}
%check
%gocheck
%endif
%endif

%if %{without bootstrap}
%files
%license LICENSE vendor/modules.txt
%doc README.md cmd/elephant/version.txt
%{_bindir}/*
%endif

%gopkgfiles

%changelog
%autochangelog
