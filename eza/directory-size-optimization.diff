diff --git a/src/fs/file.rs b/src/fs/file.rs
index e1944fa9..ab72f6a8 100644
--- a/src/fs/file.rs
+++ b/src/fs/file.rs
@@ -706,7 +706,11 @@ impl<'dir> File<'dir> {
     #[cfg(unix)]
     pub fn is_empty_dir(&self) -> bool {
         if self.is_directory() {
-            if self.metadata().map_or(0, MetadataExt::nlink) > 2 {
+            let Ok(metadata) = self.metadata() else {
+                return false;
+            };
+
+            if metadata.nlink() > 2 {
                 // Directories will have a link count of two if they do not have any subdirectories.
                 // The '.' entry is a link to itself and the '..' is a link to the parent directory.
                 // A subdirectory will have a link to its parent directory increasing the link count
@@ -714,6 +718,25 @@ impl<'dir> File<'dir> {
                 // has subdirectories.
                 false
             } else {
+                let Some(c_path) = self
+                    .path
+                    .to_str()
+                    .and_then(|str| std::ffi::CString::new(str).ok())
+                else {
+                    return self.is_empty_directory();
+                };
+
+                let mut statfs_res: libc::statfs = unsafe { std::mem::zeroed() };
+                if unsafe { libc::statfs(c_path.as_ptr().cast::<libc::c_char>(), &mut statfs_res) }
+                    == 0
+                {
+                    match statfs_res.f_type {
+                        0x9123_683e => return metadata.size() == 0, // BTRFS
+                        0x2fc1_2fc1 => return metadata.size() == 2, // ZFS
+                        _ => (),
+                    }
+                }
+
                 self.is_empty_directory()
             }
         } else {
