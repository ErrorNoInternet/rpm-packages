diff --git a/add-date-variable.diff b/add-date-variable.diff
new file mode 100644
index 0000000..118ac74
--- /dev/null
+++ b/add-date-variable.diff
@@ -0,0 +1,33 @@
+diff --git a/src/renderer/widgets/IWidget.cpp b/src/renderer/widgets/IWidget.cpp
+index f23cbc3..8d06d84 100644
+--- a/src/renderer/widgets/IWidget.cpp
++++ b/src/renderer/widgets/IWidget.cpp
+@@ -141,6 +141,15 @@ static std::string getTime12h() {
+     return (HRS == 12 || HRS == 0 ? "12" : (HRS % 12 < 10 ? "0" : "") + std::to_string(HRS % 12)) + ":" + (MINS < 10 ? "0" : "") + std::to_string(MINS) + (HRS < 12 ? " AM" : " PM");
+ }
+ 
++static std::string getDate() {
++    std::time_t t = std::time(nullptr);
++    char        buffer[50];
++    strftime(buffer, sizeof(buffer), "%A, %B %d, %Y", std::localtime(&t));
++    std::stringstream ss;
++    ss << buffer;
++    return ss.str();
++}
++
+ IWidget::SFormatResult IWidget::formatString(std::string in) {
+ 
+     auto  uidPassword = getpwuid(getuid());
+@@ -168,6 +177,11 @@ IWidget::SFormatResult IWidget::formatString(std::string in) {
+         result.updateEveryMs = result.updateEveryMs != 0 && result.updateEveryMs < 1000 ? result.updateEveryMs : 1000;
+     }
+ 
++    if (in.contains("$DATE")) {
++        replaceInString(in, "$DATE", getDate());
++        result.updateEveryMs = result.updateEveryMs != 0 && result.updateEveryMs < 1000 ? result.updateEveryMs : 1000;
++    }
++
+     if (in.contains("$FAIL")) {
+         const auto FAIL = g_pAuth->getLastFailText();
+         replaceInString(in, "$FAIL", FAIL.has_value() ? FAIL.value() : "");
+
diff --git a/hyprlock.spec b/hyprlock.spec
index 4691bef..ad31514 100644
--- a/hyprlock.spec
+++ b/hyprlock.spec
@@ -1,10 +1,14 @@
+%global sdbus_version 2.1.0
+
 Name:           hyprlock
-Version:        0.4.1
+Version:        0.8.0
 Release:        %autorelease
 Summary:        Hyprland's GPU-accelerated screen locking utility
 License:        BSD-3-Clause
 URL:            https://github.com/hyprwm/hyprlock
 Source:         %{url}/archive/v%{version}/%{name}-%{version}.tar.gz
+Source:         https://github.com/Kistler-Group/sdbus-cpp/archive/v%{sdbus_version}/sdbus-%{sdbus_version}.tar.gz
+Patch:          add-date-variable.diff
 
 # https://fedoraproject.org/wiki/Changes/EncourageI686LeafRemoval
 ExcludeArch:    %{ix86}
@@ -12,39 +16,59 @@ ExcludeArch:    %{ix86}
 BuildRequires:  cmake
 BuildRequires:  gcc-c++
 
+BuildRequires:  cmake(hyprwayland-scanner)
 BuildRequires:  pkgconfig(cairo)
 BuildRequires:  pkgconfig(egl)
 BuildRequires:  pkgconfig(gbm)
+BuildRequires:  pkgconfig(hyprgraphics)
 BuildRequires:  pkgconfig(hyprlang)
 BuildRequires:  pkgconfig(hyprutils)
 BuildRequires:  pkgconfig(libdrm)
 BuildRequires:  pkgconfig(libjpeg)
 BuildRequires:  pkgconfig(libmagic)
+BuildRequires:  pkgconfig(libsystemd)
 BuildRequires:  pkgconfig(libwebp)
 BuildRequires:  pkgconfig(opengl)
 BuildRequires:  pkgconfig(pam)
 BuildRequires:  pkgconfig(pangocairo)
+BuildRequires:  pkgconfig(systemd)
 BuildRequires:  pkgconfig(wayland-client)
 BuildRequires:  pkgconfig(wayland-egl)
 BuildRequires:  pkgconfig(wayland-protocols)
 BuildRequires:  pkgconfig(xkbcommon)
 
+Provides:       bundled(sdbus-cpp) = %{sdbus_version}
+
 %description
 %{summary}.
 
 %prep
 %autosetup -p1
+mkdir -p subprojects/sdbus-cpp
+tar -xf %{SOURCE1} -C subprojects/sdbus-cpp --strip=1
 
 %build
-%cmake
+pushd subprojects/sdbus-cpp
+%cmake \
+    -DCMAKE_INSTALL_PREFIX=%{_builddir}/sdbus \
+    -DCMAKE_BUILD_TYPE=Release \
+    -DSDBUSCPP_BUILD_DOCS=OFF \
+    -DBUILD_SHARED_LIBS=OFF
+%cmake_build
+cmake --install %{_vpath_builddir}
+popd
+export PKG_CONFIG_PATH=%{_builddir}/sdbus/%{_lib}/pkgconfig
+
+%cmake -DCMAKE_BUILD_TYPE=Release
 %cmake_build
 
 %install
 %cmake_install
+rm %{buildroot}%{_datadir}/hypr/%{name}.conf
 
 %files
 %license LICENSE
-%doc README.md
+%doc README.md assets/example.conf
 %{_bindir}/%{name}
 %config(noreplace) %{_sysconfdir}/pam.d/%{name}
 
